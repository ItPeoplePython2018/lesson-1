~/Src/python-lessons/lesson-2$ python3
Python 3.6.4 (default, Dec 21 2017, 20:33:21)
[GCC 4.2.1 Compatible Apple LLVM 9.0.0 (clang-900.0.38)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
>>> math
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'math' is not defined
>>> import math
>>> math
<module 'math' from '/opt/local/Library/Frameworks/Python.framework/Versions/3.6/lib/python3.6/lib-dynload/math.cpython-36m-darwin.so'>
>>> math.pow(5, 2)
25.0
>>> math.pow(5, 3)
125.0
>>> math.pow(5, 4)
625.0
>>> math.sqrt(math.pow(5, 4))
25.0
>>> math.sqrt(25)
5.0
>>> def func():
...     pass
...
>>> print(func())
None
>>> def func():
...     return 123
...
>>> print(func())
123
>>> var = func()
>>> import collections
>>> d = {}
>>> l = ['привет', 'пока', 'утро', 'вечер']
>>> {'п': ['привет', 'пока'], 'у': ['утро'], 'в': ['вечер']}
{'п': ['привет', 'пока'], 'у': ['утро'], 'в': ['вечер']}
>>> for i in l:
...
KeyboardInterrupt
>>> a = 'привет'
>>> a[0]
'п'
>>> l[0]
'привет'
>>> l[0][0]
'п'
>>> d
{}
>>>
>>> for i in l:
...
KeyboardInterrupt
>>> for word in l:
...
  File "<stdin>", line 2

    ^
IndentationError: expected an indented block
>>> dd = {'a': 1}
>>> dd['a']
1
>>> aa = 'a'
>>> dd[aa]
1
>>> dd['hello'] = 12345
>>> dd
{'a': 1, 'hello': 12345}
>>> for word in l:
...                                                                   bck:

...

>>> for word in l:
...     d[word[0]] = [word]
...
>>> d
{'п': ['пока'], 'у': ['утро'], 'в': ['вечер']}
>>> l
['привет', 'пока', 'утро', 'вечер']
>>> d = {}
>>> for word in l:
...     first_char = word[0]
...     if first_char in d:
...         d[first_char].append(word)
...     else:
...         d[first_char] = [word]
...
>>> d
{'п': ['привет', 'пока'], 'у': ['утро'], 'в': ['вечер']}
>>> collection.defaultdict
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'collection' is not defined
>>> collections.defaultdict
<class 'collections.defaultdict'>
>>> d = collections.defaultdict(list)
>>> for word in l:
...     first_char = word[0]
...     d[first_char].append(word)
...
>>> d
defaultdict(<class 'list'>, {'п': ['привет', 'пока'], 'у': ['утро'], 'в': ['вечер']})
